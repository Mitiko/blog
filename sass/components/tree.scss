nav { // undo default ul styles
    margin-block: 1rem;

    & ul {
        list-style-type: none;
        padding-inline: 0;
        margin-block: 0;
    }

    & > p:first-child { margin-block: 0; }
}

$x: 1.2rem; // size of boxes
$y: 0.3rem; // offset to text
$a: 0.2rem; // border width
$t: $x + $y + $a; // total offset of text

// $color: var(--c1);
$color: silver;

nav ul > li::before {
    // draw the curvy bulletpoints
    content: '';
    display: inline-block;
    width: $x; height: $x; // square

    margin-right: $y; // space between box and text
    margin-bottom: ($x / 2) - $a; // center with text
    border-bottom: $a solid $color; border-left: $a solid $color;
    border-bottom-left-radius: 50%;
    position: relative; z-index: 1; // stay on top of clearfix
}

// give text margins, so it doesn't stick to the main border
// then undo them for the pseudo element, so it does stick to the main border
// since $t + (-$t) = 0, everything will be aligned;
// and since the size of the box + the width of the border + the text offset is
// the full offset of the text from the parent container, it's pretty
$t: $x + $y + $a;
nav ul > li {
    margin-left: $t;
    &::before {
        margin-left: -$t;
    }
}

// for height: 100% to work, the containers need to be position: absolute;
// so, their parents must be position: relative;
nav, ul, li:last-child {
    position: relative;
}

nav ul::before { // main "border"
    // using a border (instead of ::before) doesn't work because of a mismatch
    // in how pixels are rounded when refering to an element vs a pseudo element
    content: '';
    display: inline-block;

    border-left: $a solid $color;
    position: absolute; height: 100%;
    // normally, instead of a clearfix, we'd use calc(100% - $x) but if 100%
    // is in a calc, it refers to its own width, rather than the parent's height
}

nav ul > li:last-child::after { // clearfix overextended (tail) border
    content: '';
    display: inline-block;

    border-left: $a solid #fff;
    position: absolute; height: 100%;
    top: 0; left: -$t; // pretend to be a ::before
}
